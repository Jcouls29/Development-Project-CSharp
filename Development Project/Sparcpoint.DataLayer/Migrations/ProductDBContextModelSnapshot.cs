// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sparcpoint.DataLayer.Context;

namespace Sparcpoint.DataLayer.Migrations
{
    [DbContext(typeof(ProductDBContext))]
    partial class ProductDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sparcpoint.Models.Category", b =>
                {
                    b.Property<Guid>("InstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstanceId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Sparcpoint.Models.CategoryOfCategory", b =>
                {
                    b.Property<Guid>("InstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryInstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InstanceId");

                    b.HasIndex("CategoryInstanceId");

                    b.ToTable("CategoryOfCategory");
                });

            modelBuilder.Entity("Sparcpoint.Models.CatergoryAttributes", b =>
                {
                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryInstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstanceId", "Key");

                    b.HasIndex("CategoryInstanceId");

                    b.ToTable("CatergoryAttributes");
                });

            modelBuilder.Entity("Sparcpoint.Models.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("Sparcpoint.Models.ProductAttribute", b =>
                {
                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ProductsInstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstanceId", "Key");

                    b.HasIndex("ProductsInstanceId");

                    b.ToTable("ProductAttribute");
                });

            modelBuilder.Entity("Sparcpoint.Models.ProductCategories", b =>
                {
                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryInstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductsInstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InstanceId", "CategoryInstanceId");

                    b.HasIndex("CategoryInstanceId");

                    b.HasIndex("ProductsInstanceId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Sparcpoint.Models.Products", b =>
                {
                    b.Property<Guid>("InstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImageUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidSkus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstanceId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Sparcpoint.Models.CategoryOfCategory", b =>
                {
                    b.HasOne("Sparcpoint.Models.Category", "Category")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Sparcpoint.Models.CatergoryAttributes", b =>
                {
                    b.HasOne("Sparcpoint.Models.Category", null)
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryInstanceId");
                });

            modelBuilder.Entity("Sparcpoint.Models.ProductAttribute", b =>
                {
                    b.HasOne("Sparcpoint.Models.Products", null)
                        .WithMany("Attributes")
                        .HasForeignKey("ProductsInstanceId");
                });

            modelBuilder.Entity("Sparcpoint.Models.ProductCategories", b =>
                {
                    b.HasOne("Sparcpoint.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sparcpoint.Models.Products", null)
                        .WithMany("Categories")
                        .HasForeignKey("ProductsInstanceId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Sparcpoint.Models.Category", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Sparcpoint.Models.Products", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
