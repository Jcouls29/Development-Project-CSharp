// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Sparcpoint.Inventory.Model
{
    public partial class SparcpointInventoryDatabaseContext : DbContext
    {
        public SparcpointInventoryDatabaseContext()
        {
        }

        public SparcpointInventoryDatabaseContext(DbContextOptions<SparcpointInventoryDatabaseContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<CategoryAttributes> CategoryAttributes { get; set; }
        public virtual DbSet<CategoryCategories> CategoryCategories { get; set; }
        public virtual DbSet<InventoryTransactions> InventoryTransactions { get; set; }
        public virtual DbSet<ProductAttributes> ProductAttributes { get; set; }
        public virtual DbSet<ProductCategories> ProductCategories { get; set; }
        public virtual DbSet<Products> Products { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Categories>(entity =>
            {
                entity.HasKey(e => e.InstanceId)
                    .HasName("PK__Categori__5C51994FFA042D98");

                entity.ToTable("Categories", "Instances");

                entity.Property(e => e.CreatedTimestamp).HasDefaultValueSql("(sysutcdatetime())");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(64)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CategoryAttributes>(entity =>
            {
                entity.HasKey(e => new { e.InstanceId, e.Key });

                entity.ToTable("CategoryAttributes", "Instances");

                entity.Property(e => e.Key)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.HasOne(d => d.Instance)
                    .WithMany(p => p.CategoryAttributes)
                    .HasForeignKey(d => d.InstanceId)
                    .HasConstraintName("FK_CategoryAttributes_Categories");
            });

            modelBuilder.Entity<CategoryCategories>(entity =>
            {
                entity.HasKey(e => new { e.InstanceId, e.CategoryInstanceId });

                entity.ToTable("CategoryCategories", "Instances");

                entity.HasOne(d => d.CategoryInstance)
                    .WithMany(p => p.CategoryCategoriesCategoryInstance)
                    .HasForeignKey(d => d.CategoryInstanceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CategoryCategories_Categories_Categories");

                entity.HasOne(d => d.Instance)
                    .WithMany(p => p.CategoryCategoriesInstance)
                    .HasForeignKey(d => d.InstanceId)
                    .HasConstraintName("FK_CategoryCategories_Categories");
            });

            modelBuilder.Entity<InventoryTransactions>(entity =>
            {
                entity.HasKey(e => e.TransactionId)
                    .HasName("PK__Inventor__55433A6BAABF83C8");

                entity.ToTable("InventoryTransactions", "Transactions");

                entity.HasIndex(e => e.CompletedTimestamp, "IX_InventoryTransactions_CompletedTimestamp");

                entity.HasIndex(e => e.ProductInstanceId, "IX_InventoryTransactions_ProductInstanceId");

                entity.HasIndex(e => new { e.ProductInstanceId, e.Quantity }, "IX_InventoryTransactions_ProductInstanceId_Quantity");

                entity.Property(e => e.Quantity).HasColumnType("decimal(19, 6)");

                entity.Property(e => e.StartedTimestamp).HasDefaultValueSql("(sysutcdatetime())");

                entity.Property(e => e.TypeCategory)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.HasOne(d => d.ProductInstance)
                    .WithMany(p => p.InventoryTransactions)
                    .HasForeignKey(d => d.ProductInstanceId)
                    .HasConstraintName("FK_InventoryTransactions_Products");
            });

            modelBuilder.Entity<ProductAttributes>(entity =>
            {
                entity.HasKey(e => new { e.InstanceId, e.Key });

                entity.ToTable("ProductAttributes", "Instances");

                entity.HasIndex(e => new { e.Key, e.Value }, "IX_ProductAttributes_Key_Value");

                entity.Property(e => e.Key)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.HasOne(d => d.Instance)
                    .WithMany(p => p.ProductAttributes)
                    .HasForeignKey(d => d.InstanceId)
                    .HasConstraintName("FK_ProductAttributes_Products");
            });

            modelBuilder.Entity<ProductCategories>(entity =>
            {
                entity.HasKey(e => new { e.InstanceId, e.CategoryInstanceId });

                entity.ToTable("ProductCategories", "Instances");

                entity.HasOne(d => d.CategoryInstance)
                    .WithMany(p => p.ProductCategories)
                    .HasForeignKey(d => d.CategoryInstanceId)
                    .HasConstraintName("FK_ProductCategories_Categories");

                entity.HasOne(d => d.Instance)
                    .WithMany(p => p.ProductCategories)
                    .HasForeignKey(d => d.InstanceId)
                    .HasConstraintName("FK_ProductCategories_Products");
            });

            modelBuilder.Entity<Products>(entity =>
            {
                entity.HasKey(e => e.InstanceId)
                    .HasName("PK__Products__5C51994FA491314C");

                entity.ToTable("Products", "Instances");

                entity.Property(e => e.CreatedTimestamp).HasDefaultValueSql("(sysutcdatetime())");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ProductImageUris)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.ValidSkus)
                    .IsRequired()
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}