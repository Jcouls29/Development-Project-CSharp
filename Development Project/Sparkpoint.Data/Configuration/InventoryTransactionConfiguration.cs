// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Sparkpoint.Data
{
    // InventoryTransactions
    public class InventoryTransactionConfiguration : IEntityTypeConfiguration<InventoryTransaction>
    {
        public void Configure(EntityTypeBuilder<InventoryTransaction> builder)
        {
            builder.ToTable("InventoryTransactions", "Transactions");
            builder.HasKey(x => x.TransactionId).HasName("PK__Inventor__55433A6B7EDFA4D8").IsClustered();

            builder.Property(x => x.TransactionId).HasColumnName(@"TransactionId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.ProductInstanceId).HasColumnName(@"ProductInstanceId").HasColumnType("int").IsRequired();
            builder.Property(x => x.Quantity).HasColumnName(@"Quantity").HasColumnType("decimal(19,6)").IsRequired();
            builder.Property(x => x.StartedTimestamp).HasColumnName(@"StartedTimestamp").HasColumnType("datetime2").IsRequired();
            builder.Property(x => x.CompletedTimestamp).HasColumnName(@"CompletedTimestamp").HasColumnType("datetime2").IsRequired(false);
            builder.Property(x => x.TypeCategory).HasColumnName(@"TypeCategory").HasColumnType("varchar(32)").IsRequired(false).IsUnicode(false).HasMaxLength(32);

            // Foreign keys
            builder.HasOne(a => a.Product).WithMany(b => b.InventoryTransactions).HasForeignKey(c => c.ProductInstanceId).HasConstraintName("FK_InventoryTransactions_Products");

            builder.HasIndex(x => x.CompletedTimestamp).HasName("IX_InventoryTransactions_CompletedTimestamp");
            builder.HasIndex(x => x.ProductInstanceId).HasName("IX_InventoryTransactions_ProductInstanceId");
            builder.HasIndex(x => new { x.ProductInstanceId, x.Quantity }).HasName("IX_InventoryTransactions_ProductInstanceId_Quantity");
        }
    }

}
// </auto-generated>
