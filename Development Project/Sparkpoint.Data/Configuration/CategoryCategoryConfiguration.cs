// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Sparkpoint.Data
{
    // CategoryCategories
    public class CategoryCategoryConfiguration : IEntityTypeConfiguration<CategoryCategory>
    {
        public void Configure(EntityTypeBuilder<CategoryCategory> builder)
        {
            builder.ToTable("CategoryCategories", "Instances");
            builder.HasKey(x => new { x.InstanceId, x.CategoryInstanceId }).HasName("PK_CategoryCategories").IsClustered();

            builder.Property(x => x.InstanceId).HasColumnName(@"InstanceId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.CategoryInstanceId).HasColumnName(@"CategoryInstanceId").HasColumnType("int").IsRequired().ValueGeneratedNever();

            // Foreign keys
            builder.HasOne(a => a.CategoryInstance).WithMany(b => b.CategoryCategories_CategoryInstanceId).HasForeignKey(c => c.CategoryInstanceId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_CategoryCategories_Categories_Categories");
            builder.HasOne(a => a.Instance).WithMany(b => b.CategoryCategories_InstanceId).HasForeignKey(c => c.InstanceId).HasConstraintName("FK_CategoryCategories_Categories");
        }
    }

}
// </auto-generated>
